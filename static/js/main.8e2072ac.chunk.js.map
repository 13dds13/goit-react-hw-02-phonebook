{"version":3,"sources":["components/filter/Filter.module.css","components/contactsList/ContactsList.module.css","components/contactForm/ContactForm.module.css","components/container/Container.module.css","components/contactForm/ContactForm.js","components/filter/Filter.js","components/contactsList/ContactsList.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameId","nanoid","numberId","handleChange","e","target","value","setState","this","className","form","onSubmit","props","handleSubmit","htmlFor","input","id","type","pattern","title","required","autoComplete","onChange","btn","Component","Filter","findContactId","deleteContact","filter","contacts","styles","wrap","listWrap","item","toLowerCase","includes","map","listItem","onClick","ContactsList","App","INITIAL_DATA","preventDefault","newName","newNumber","find","alert","prev","nameToDelete","filteredContacts","container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e2072ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Filter_wrap__kmQS7\",\"listWrap\":\"Filter_listWrap__1S7Vi\",\"listItem\":\"Filter_listItem__nkLzs\",\"name\":\"Filter_name__2_UY6\",\"number\":\"Filter_number__1x-Va\",\"btn\":\"Filter_btn__2zpCZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listWrap\":\"ContactsList_listWrap__5OP_4\",\"listItem\":\"ContactsList_listItem__cK-KA\",\"btn\":\"ContactsList_btn__xowcz\",\"name\":\"ContactsList_name__FvRFt\",\"number\":\"ContactsList_number__3Ft3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2VBEj\",\"btn\":\"ContactForm_btn__1ZhuJ\",\"input\":\"ContactForm_input__1tZiM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2M4wt\",\"title\":\"Container_title__3klKE\"};","import React, { Component } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { form, btn, input } from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameId = nanoid();\r\n  numberId = nanoid();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={form} onSubmit={this.props.handleSubmit}>\r\n        <label htmlFor={this.nameId}>Enter name:</label>\r\n        <input\r\n          className={input}\r\n          id={this.nameId}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          autoComplete=\"off\"\r\n          onChange={this.handleChange}\r\n          value={name}\r\n        />\r\n        <label htmlFor={this.numberId}>Enter number:</label>\r\n        <input\r\n          className={input}\r\n          id={this.numberId}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          autoComplete=\"off\"\r\n          onChange={this.handleChange}\r\n          value={number}\r\n        />\r\n        <button className={btn} type=\"submit\">\r\n          Add to contacts\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  handleSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({\r\n  findContactId,\r\n  deleteContact,\r\n  handleChange,\r\n  filter,\r\n  contacts,\r\n}) => {\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <label htmlFor={findContactId}>Find contact by name: </label>\r\n      <input\r\n        id={findContactId}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        autoComplete=\"off\"\r\n        onChange={handleChange}\r\n        value={filter}\r\n      />\r\n      {filter && (\r\n        <ul className={styles.listWrap}>\r\n          {contacts\r\n            .filter((item) => item.name.toLowerCase().includes(filter))\r\n            .map((item) => (\r\n              <li className={styles.listItem} key={item.id}>\r\n                {\" \"}\r\n                <p className={styles.name}>\r\n                  {item.name}:{\" \"}\r\n                  <span className={styles.number}>{item.number}</span>\r\n                </p>\r\n                <button\r\n                  className={styles.btn}\r\n                  name={item.name}\r\n                  type=\"button\"\r\n                  onClick={() => deleteContact(item.name)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  findContactId: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n  handleChange: PropTypes.func,\r\n  filter: PropTypes.string,\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactsList.module.css\";\r\n\r\nconst ContactsList = ({ contacts, filter, deleteContact }) => {\r\n  return (\r\n    !filter && (\r\n      <ul className={styles.listWrap}>\r\n        {contacts.map((item) => (\r\n          <li className={styles.listItem} key={item.id}>\r\n            <p className={styles.name}>\r\n              {item.name}: <span className={styles.number}>{item.number}</span>{\" \"}\r\n            </p>\r\n            <button\r\n              className={styles.btn}\r\n              name={item.name}\r\n              type=\"button\"\r\n              onClick={() => deleteContact(item.name)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  deleteContact: PropTypes.func,\r\n  filter: PropTypes.string,\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default ContactsList;\r\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport INITIAL_DATA from \"../data/initialData.json\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport Filter from \"./filter/Filter\";\nimport ContactsList from \"./contactsList/ContactsList\";\nimport styles from \"./container/Container.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [...INITIAL_DATA],\n    filter: \"\",\n  };\n\n  findContactId = nanoid();\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = e.target;\n    const newName = name.value;\n    const newNumber = number.value;\n\n    const isAlreadyInContacts = this.state.contacts.find(\n      ({ name }) => name.toLowerCase() === newName.toLowerCase()\n    );\n\n    if (isAlreadyInContacts) {\n      alert(`${newName} is already in contacts`);\n      return;\n    }\n\n    this.setState((prev) => ({\n      contacts: [\n        ...prev.contacts,\n        {\n          name: newName,\n          id: nanoid(),\n          number: newNumber,\n        },\n      ],\n    }));\n  };\n\n  deleteContact = (nameToDelete) => {\n    const filteredContacts = this.state.contacts.filter(\n      ({ name }) => name !== nameToDelete\n    );\n    this.setState({ contacts: [...filteredContacts] });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <div className={styles.container}>\n        <h2 className={styles.title}>Phonebook</h2>\n        <ContactForm handleSubmit={this.handleSubmit} />\n        <h2 className={styles.title}>Contacts</h2>\n        <Filter\n          contacts={contacts}\n          filter={filter}\n          handleChange={this.handleChange}\n          deleteContact={this.deleteContact}\n          findContactId={this.findContactId}\n        />\n        <ContactsList\n          contacts={contacts}\n          filter={filter}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}