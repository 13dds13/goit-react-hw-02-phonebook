{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/container/Container.module.css","components/contactsList/ContactsList.module.css","components/filter/Filter.module.css","components/contactForm/ContactForm.js","components/filter/Filter.js","components/contactsList/contactsListFull/ContactsListFull.js","components/contactsList/contactsListFiltered/ContactsListFiltered.js","components/contactsList/ContactsList.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameId","nanoid","numberId","handleChange","e","target","value","setState","this","className","form","onSubmit","props","handleSubmit","htmlFor","input","id","type","pattern","title","required","autoComplete","onChange","btn","Component","Filter","filter","findContactId","styles","wrap","ContactsListFull","contacts","deleteContact","listWrap","map","item","listItem","onClick","ContactsListFiltered","toLowerCase","includes","ContactsList","App","INITIAL_DATA","preventDefault","newName","newNumber","find","alert","prev","nameToDelete","filteredContacts","container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c875a708.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2VBEj\",\"btn\":\"ContactForm_btn__1ZhuJ\",\"input\":\"ContactForm_input__1tZiM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2M4wt\",\"title\":\"Container_title__3klKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listWrap\":\"ContactsList_listWrap__5OP_4\",\"listItem\":\"ContactsList_listItem__cK-KA\",\"btn\":\"ContactsList_btn__xowcz\",\"name\":\"ContactsList_name__FvRFt\",\"number\":\"ContactsList_number__3Ft3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Filter_wrap__kmQS7\",\"listWrap\":\"Filter_listWrap__1S7Vi\",\"listItem\":\"Filter_listItem__nkLzs\",\"name\":\"Filter_name__2_UY6\",\"number\":\"Filter_number__1x-Va\",\"btn\":\"Filter_btn__2zpCZ\"};","import React, { Component } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { form, btn, input } from \"./ContactForm.module.css\";\r\n\r\n// const INITIAL_STATE = { name: \"\", number: \"\" };\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameId = nanoid();\r\n  numberId = nanoid();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  // handleClick = (e) => {\r\n  //   this.setState({ ...INITIAL_STATE });\r\n  // };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={form} onSubmit={this.props.handleSubmit}>\r\n        <label htmlFor={this.nameId}>Enter name:</label>\r\n        <input\r\n          className={input}\r\n          id={this.nameId}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          autoComplete=\"off\"\r\n          onChange={this.handleChange}\r\n          value={name}\r\n        />\r\n        <label htmlFor={this.numberId}>Enter number:</label>\r\n        <input\r\n          className={input}\r\n          id={this.numberId}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          autoComplete=\"off\"\r\n          onChange={this.handleChange}\r\n          value={number}\r\n        />\r\n        <button\r\n          className={btn}\r\n          type=\"submit\"\r\n          // onClick={this.handleClick}\r\n        >\r\n          Add to contacts\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  handleSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ handleChange, filter }) => {\r\n  const findContactId = nanoid();\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <label htmlFor={findContactId}>Find contact by name: </label>\r\n      <input\r\n        id={findContactId}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        autoComplete=\"off\"\r\n        onChange={handleChange}\r\n        value={filter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactsListFull = ({ styles, contacts, deleteContact }) => {\r\n  return (\r\n    <>\r\n      <p>All contacts:</p>\r\n      <ul className={styles.listWrap}>\r\n        {contacts.map((item) => (\r\n          <li className={styles.listItem} key={item.id}>\r\n            <p className={styles.name}>\r\n              {item.name}: <span className={styles.number}>{item.number}</span>{\" \"}\r\n            </p>\r\n            <button\r\n              className={styles.btn}\r\n              name={item.name}\r\n              type=\"button\"\r\n              onClick={() => deleteContact(item.name)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactsListFull.propTypes = {\r\n  deleteContact: PropTypes.func,\r\n  styles: PropTypes.objectOf(PropTypes.string),\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactsListFull;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactsListFiltered = ({ filter, styles, contacts, deleteContact }) => {\r\n  return (\r\n    <>\r\n      <p>Search results:</p>\r\n      <ul className={styles.listWrap}>\r\n        {contacts\r\n          .filter((item) =>\r\n            item.name.toLowerCase().includes(filter.toLowerCase())\r\n          )\r\n          .map((item) => (\r\n            <li className={styles.listItem} key={item.id}>\r\n              {\" \"}\r\n              <p className={styles.name}>\r\n                {item.name}:{\" \"}\r\n                <span className={styles.number}>{item.number}</span>\r\n              </p>\r\n              <button\r\n                className={styles.btn}\r\n                name={item.name}\r\n                type=\"button\"\r\n                onClick={() => deleteContact(item.name)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactsListFiltered.propTypes = {\r\n  filter: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n  styles: PropTypes.objectOf(PropTypes.string),\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactsListFiltered;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactsList.module.css\";\r\nimport ContactsListFull from \"./contactsListFull/ContactsListFull\";\r\nimport ContactsListFiltered from \"./contactsListFiltered/ContactsListFiltered\";\r\n\r\nconst ContactsList = ({ contacts, filter, deleteContact }) => {\r\n  return !filter ? (\r\n    <ContactsListFull\r\n      deleteContact={deleteContact}\r\n      contacts={contacts}\r\n      styles={styles}\r\n    />\r\n  ) : (\r\n    <ContactsListFiltered\r\n      deleteContact={deleteContact}\r\n      contacts={contacts}\r\n      filter={filter}\r\n      styles={styles}\r\n    />\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  deleteContact: PropTypes.func,\r\n  filter: PropTypes.string,\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default ContactsList;\r\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport INITIAL_DATA from \"../data/initialData.json\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport Filter from \"./filter/Filter\";\nimport ContactsList from \"./contactsList/ContactsList\";\nimport styles from \"./container/Container.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [...INITIAL_DATA],\n    filter: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = e.target;\n    const newName = name.value;\n    const newNumber = number.value;\n\n    const isAlreadyInContacts = this.state.contacts.find(\n      ({ name }) => name.toLowerCase() === newName.toLowerCase()\n    );\n\n    if (isAlreadyInContacts) {\n      alert(`${newName} is already in contacts`);\n      return;\n    }\n\n    this.setState((prev) => ({\n      contacts: [\n        ...prev.contacts,\n        {\n          name: newName,\n          id: nanoid(),\n          number: newNumber,\n        },\n      ],\n    }));\n  };\n\n  deleteContact = (nameToDelete) => {\n    const filteredContacts = this.state.contacts.filter(\n      ({ name }) => name !== nameToDelete\n    );\n    this.setState({ contacts: [...filteredContacts] });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <div className={styles.container}>\n        <h2 className={styles.title}>Phonebook</h2>\n\n        <ContactForm handleSubmit={this.handleSubmit} />\n\n        <h2 className={styles.title}>Contacts</h2>\n\n        <Filter\n          contacts={contacts}\n          filter={filter}\n          handleChange={this.handleChange}\n          deleteContact={this.deleteContact}\n          findContactId={this.findContactId}\n        />\n\n        <ContactsList\n          contacts={contacts}\n          filter={filter}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}