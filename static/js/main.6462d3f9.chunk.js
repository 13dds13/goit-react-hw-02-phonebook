(this["webpackJsonpgoit-react-hw-02-phonebook"]=this["webpackJsonpgoit-react-hw-02-phonebook"]||[]).push([[0],{11:function(e){e.exports=JSON.parse('[{"id":1,"name":"Homer","number":"85-69-87"},{"id":2,"name":"Marge","number":"564-85-46"},{"id":3,"name":"Bart","number":"575-95-84"},{"id":4,"name":"Lisa","number":"579-51-20"},{"id":5,"name":"Maggie","number":"563-54-55"},{"id":6,"name":"Abe","number":"599-99-99"}]')},16:function(e,t,n){},18:function(e,t,n){"use strict";n.r(t);var a=n(1),r=n(10),c=n.n(r),i=(n(16),n(3)),o=n(8),s=n(4),l=n(5),u=n(7),d=n(6),b=n(2),h=n(11),m=n(0),j=function(e){Object(u.a)(n,e);var t=Object(d.a)(n);function n(){var e;Object(s.a)(this,n);for(var a=arguments.length,r=new Array(a),c=0;c<a;c++)r[c]=arguments[c];return(e=t.call.apply(t,[this].concat(r))).state={name:"",number:""},e.nameId=Object(b.a)(),e.numberId=Object(b.a)(),e.handleChange=function(t){var n=t.target,a=n.name,r=n.value;e.setState(Object(i.a)({},a,r))},e}return Object(l.a)(n,[{key:"render",value:function(){var e=this.state,t=e.name,n=e.number;return Object(m.jsxs)("form",{onSubmit:this.props.handleSubmit,children:[Object(m.jsx)("label",{htmlFor:this.nameId,children:"Enter name:"}),Object(m.jsx)("input",{id:this.nameId,type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"\u0418\u043c\u044f \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0437 \u0431\u0443\u043a\u0432, \u0430\u043f\u043e\u0441\u0442\u0440\u043e\u0444\u0430, \u0442\u0438\u0440\u0435 \u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \u0438 \u0442. \u043f.",required:!0,autoComplete:"off",onChange:this.handleChange,value:t}),Object(m.jsx)("label",{htmlFor:this.numberId,children:"Enter number"}),Object(m.jsx)("input",{id:this.numberId,type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0441\u0442\u043e\u044f\u0442\u044c \u0446\u0438\u0444\u0440 \u0438 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043f\u0440\u043e\u0431\u0435\u043b\u044b, \u0442\u0438\u0440\u0435, \u043a\u0440\u0443\u0433\u043b\u044b\u0435 \u0441\u043a\u043e\u0431\u043a\u0438 \u0438 \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0447\u0438\u043d\u0430\u0442\u044c\u0441\u044f \u0441 +",required:!0,autoComplete:"off",onChange:this.handleChange,value:n}),Object(m.jsx)("button",{type:"submit",children:"Add to contacts"})]})}}]),n}(a.Component),f=j,O=function(e){var t=e.findContactId,n=e.deleteContact,a=e.handleChange,r=e.filter,c=e.contacts;return Object(m.jsxs)(m.Fragment,{children:[Object(m.jsx)("label",{htmlFor:t,children:"Find contacts by name"}),Object(m.jsx)("input",{id:t,type:"text",name:"filter",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"\u0418\u043c\u044f \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0437 \u0431\u0443\u043a\u0432, \u0430\u043f\u043e\u0441\u0442\u0440\u043e\u0444\u0430, \u0442\u0438\u0440\u0435 \u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \u0438 \u0442. \u043f.",required:!0,autoComplete:"off",onChange:a,value:r}),r&&Object(m.jsx)("ul",{children:c.filter((function(e){return e.name.toLowerCase().includes(r)})).map((function(e){return Object(m.jsxs)("li",{children:[" ",Object(m.jsxs)("p",{children:[e.name,": ",e.number]}),Object(m.jsx)("button",{name:e.name,type:"button",onClick:function(){return n(e.name)},children:"Delete"})]},e.id)}))})]})},p=function(e){var t=e.contacts,n=e.filter,a=e.deleteContact;return!n&&Object(m.jsx)("ul",{children:t.map((function(e){return Object(m.jsxs)("li",{children:[Object(m.jsxs)("p",{children:[e.name,": ",Object(m.jsx)("span",{children:e.number})," "]}),Object(m.jsx)("button",{name:e.name,type:"button",onClick:function(){return a(e.name)},children:"Delete"})]},e.id)}))})},C=function(e){Object(u.a)(n,e);var t=Object(d.a)(n);function n(){var e;Object(s.a)(this,n);for(var a=arguments.length,r=new Array(a),c=0;c<a;c++)r[c]=arguments[c];return(e=t.call.apply(t,[this].concat(r))).state={contacts:Object(o.a)(h),filter:""},e.findContactId=Object(b.a)(),e.handleChange=function(t){var n=t.target,a=n.name,r=n.value;e.setState(Object(i.a)({},a,r))},e.handleSubmit=function(t){t.preventDefault();var n=t.target,a=n.name,r=n.number,c=a.value,i=r.value;e.state.contacts.find((function(e){return e.name.toLowerCase()===c.toLowerCase()}))?alert("".concat(c," is already in contacts")):e.setState((function(e){return{contacts:[].concat(Object(o.a)(e.contacts),[{name:c,id:Object(b.a)(),number:i}])}}))},e.deleteContact=function(t){var n=e.state.contacts.filter((function(e){return e.name!==t}));e.setState({contacts:Object(o.a)(n)})},e}return Object(l.a)(n,[{key:"render",value:function(){var e=this.state,t=e.contacts,n=e.filter;return Object(m.jsxs)("div",{children:[Object(m.jsx)("h2",{children:"Phonebook"}),Object(m.jsx)(f,{handleSubmit:this.handleSubmit}),Object(m.jsx)("h2",{children:"Contacts"}),Object(m.jsx)(O,{contacts:t,filter:n,handleChange:this.handleChange,deleteContact:this.deleteContact,findContactId:this.findContactId}),Object(m.jsx)(p,{contacts:t,filter:n,deleteContact:this.deleteContact})]})}}]),n}(a.Component),x=C;c.a.render(Object(m.jsx)(x,{}),document.getElementById("root"))}},[[18,1,2]]]);
//# sourceMappingURL=main.6462d3f9.chunk.js.map